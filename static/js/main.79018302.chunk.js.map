{"version":3,"sources":["Sections/AboutMe.js","components/Project.js","Sections/Projects.js","components/Activity.js","Sections/Activities.js","Sections/Contact.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["AboutMe","className","id","href","Project","title","description","image","imageStyles","backgroundImage","height","maxHeight","width","maxWidth","marginTop","marginRight","backgroundPosition","backgroundSize","borderRadius","boxShadow","style","Projects","map","myProject","key","Activity","backgroundRepeat","Activities","myActivity","Contact","textAlign","data","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.79018302.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AboutMe = () => {\n  return (\n    <section className=\"row center-xs start-sm middle-sm\" id=\"About\">\n      <div className=\"oval\"></div>\n      <div className=\"oval orange\"></div>\n      <div className=\"profilePic col-sm-offset-1\"></div>\n      <div className=\"col-xs-11 col-sm-5 col-sm-offset-1 \">\n        <h1 className=\"title\">\n          {\" \"}\n          I'm <span>Andrew Elliott</span>{\" \"}\n        </h1>\n        <p>\n          Wowwww i love to dance. Do you like to dance? You can also{\" \"}\n          <a href=\"#Contact\">contact me</a>.\n        </p>\n      </div>\n    </section>\n  );\n};\nexport default AboutMe;\n","import React from 'react'\n\nconst Project = ({title, description, image}) => {\n    const BASE_URL = '/ProjectImages/';\n    const imageStyles = {\n        backgroundImage: `url(\"${BASE_URL + image}\")`,\n        height: '40vw',\n        maxHeight:'10em',\n        width: '40vw',\n        maxWidth: '10em',\n        marginTop:'2em',\n        marginRight:'1em',\n        backgroundPosition: 'center center',\n        backgroundSize: 'cover',\n        borderRadius: '15%',\n        boxShadow: '4px 4px 15px rgba(0, 0, 0, 0.2)',\n        \n        \n\n    }\n    return (\n        <li className=\"row center-xs start-sm\">\n           <div style={imageStyles}></div>\n            <div className=\"col-xs-12 col-sm-6\">\n            <h3 className=\"col-xs-12 projectTitle\">{title}</h3>\n            <p >{description}</p>\n            </div>\n        </li>\n    )\n}\nexport default Project;\n","import React from \"react\";\nimport Project from \"../components/Project\";\n\nconst Projects = () => {\n  const myProjects = [\n    {\n      title: \"Vertical Jump\",\n      description: \"AEWF awef ef aw fwfawef waef\",\n      image: \"Vertical.png\",\n    },\n    {\n      title: \"Vertoo\",\n      description: \"AEWF awef ef aw fwfawef waef\",\n      image: \"Vertical.png\",\n    },\n  ];\n  return (\n    <section id=\"Projects\">\n      <div className=\"containerX\">\n        <div className=\"row\">\n          <h2 className=\"col-xs-12 sectionTitle\">Projects</h2>\n        </div>\n      </div>\n      <ul className=\"containerX\">\n        {myProjects.map((myProject) => (\n          <Project\n            key={myProject.title}\n            image={myProject.image}\n            title={myProject.title}\n            description={myProject.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\nexport default Projects;\n","import React from 'react'\n\nconst Activity = ({title, description, image}) => {\n    const BASE_URL = '/ActivityImages/';\n    const imageStyles = {\n        backgroundImage: `url(\"${BASE_URL + image}\")`,\n        height: '40vw',\n        maxHeight:'10em',\n        width: '40vw',\n        maxWidth: '15em',\n        marginTop:'2em',\n        marginRight:'1em',\n        backgroundPosition: 'center center',\n        backgroundSize: '65%',\n        backgroundRepeat: 'no-repeat',\n        boxShadow: '4px 4px 15px rgba(0, 0, 0, 0.2)',\n    }\n\n\n    return (\n        <li className=\"row center-xs start-sm\">\n           <div style={imageStyles}></div>\n            <div className=\"col-xs-12 col-sm-6\">\n            <h3 className=\"col-xs-12 projectTitle\">{title}</h3>\n            <p >{description}</p>\n            </div>\n        </li>\n    )\n}\n\n\n\nexport default Activity\n","import React from \"react\";\nimport Activity from '../components/Activity';\n\nconst Activities = () => {\n  const myActivities = [\n    {\n      title: \"The Impact Movement\",\n      description:\n        \"A passion on mine is to reach the Black community on campus. The Impact Movement is about engaging with Black students and leading them into a realtionship with Jesus Christ \",\n      image: \"Impact.png\",\n    },\n    {\n      title: \"Chi Alpha Ministries\",\n      description:\n        \"Join Chi Alpha! It is a great way to find life-long friends and know more about Jesus! I have been apart of Chi Alpha for 3 years.\",\n      image: \"ChiAlpha.png\",\n    },\n  ];\n\n  return (\n    <section id=\"FaithActivities\">\n      <div className=\"containerX\">\n        <div className=\"row\">\n          <h2 className=\"col-xs-12 sectionTitle\">Faith and Activities</h2>\n        </div>\n      </div>\n      <ul className=\"containerX\">\n        {myActivities.map((myActivity) => (\n          <Activity\n            key={myActivity.title}\n            image={myActivity.image}\n            title={myActivity.title}\n            description={myActivity.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\nexport default Activities;\n","import React from 'react';\n\nconst Contact = () => {\n\n    return(\n        <section id='Contact'>\n            <div className='containerX'>\n                <div className='row'>\n                    <h2 className='col-xs-12 sectionTitle'>Contact Me</h2>\n                    <p className='col-xs-12' style={{textAlign:'center'}}> You can contact me at <a href='mailto: andy.telliott@icloud.com'> andy.telliott@icloud.com</a>.</p>\n                    <a className='col-xs-12 row center-xs' href='/linkedin.svg'>\n                    <div >\n                        <object data='/linkedin.svg' width='50px'>\n                        </object>\n                        </div>\n                    </a>\n                </div>\n\n            </div>\n        </section>\n    )\n}\nexport default Contact;","import React from 'react';\nimport AboutMe from './Sections/AboutMe';\nimport Projects from './Sections/Projects';\nimport Activities from './Sections/Activities';\nimport Contact from './Sections/Contact';\nconst Main =() =>{\nreturn(\n    <main>\n        <AboutMe/>\n        <Projects/>\n        <Activities/>\n        <Contact/>\n\n        \n    </main>\n)\n\n}\nexport default Main;","import React from 'react';\nimport './App.scss';\n// import Header from './Header';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <>\n      {/* <Header/> */}\n      <Main/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}